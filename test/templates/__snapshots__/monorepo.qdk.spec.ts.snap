// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`monorepo template > synthetize a monorepo template 1`] = `
"/
├─ .gitignore
├─ .mise.toml
├─ .npmrc
├─ .qdk/
│  ├─ meta.json
│  └─ tree.txt
├─ apps/
│  └─ myapp/
│     ├─ .qdk/
│     │  ├─ meta.json
│     │  └─ tree.txt
│     ├─ App.tsx
│     ├─ android/
│     │  ├─ app/
│     │  │  └─ build.gradle
│     │  └─ settings.gradle
│     ├─ metro.config.js
│     └─ package.json
├─ package.json
├─ packages/
│  ├─ my-lib-a/
│  │  ├─ .qdk/
│  │  │  ├─ meta.json
│  │  │  └─ tree.txt
│  │  └─ package.json
│  ├─ my-lib-b/
│  │  ├─ .qdk/
│  │  │  ├─ meta.json
│  │  │  └─ tree.txt
│  │  ├─ package.json
│  │  └─ tsconfig.json
│  ├─ my-lib-c/
│  │  ├─ .qdk/
│  │  │  ├─ meta.json
│  │  │  └─ tree.txt
│  │  ├─ package.json
│  │  └─ tsconfig.json
│  └─ react-native-multiply/
│     ├─ .qdk/
│     │  ├─ meta.json
│     │  └─ tree.txt
│     └─ package.json
├─ pnpm-workspace.yaml
└─ shared/
   └─ tsconfig/
      ├─ .qdk/
      │  ├─ meta.json
      │  └─ tree.txt
      ├─ node.json
      ├─ package.json
      └─ react-native.json"
`;

exports[`monorepo template > synthetize a monorepo template 2`] = `
{
  "/.gitignore": "
### Node.js Standard ###
# Logs generated by Node.js and related tools
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data files (PID files, seeds, locks)
pids
*.pid
*.seed
*.pid.lock

# Dependency directories (Node.js and package managers)
node_modules/
jspm_packages/
web_modules/ # Snowpack (https://snowpack.dev/)

# Build outputs and binary addons (https://nodejs.org/api/addons.html)
build/Release
.lock-wscript

# Coverage files used by testing tools like Istanbul/nyc
coverage/
*.lcov
.nyc_output

# Cache directories
.npm
.cache
.parcel-cache # Parcel (https://parceljs.org/)
.eslintcache # ESLint
.stylelintcache # Stylelint
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# TypeScript cache
*.tsbuildinfo

# Yarn Integrity file
.yarn-integrity

# REPL history
.node_repl_history

# Output from 'npm pack'
*.tgz

### Environment Variables ###
# dotenv environment variable files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

### Framework-specific Build Outputs ###
# Next.js (https://nextjs.org/)
.next/
out/

# Nuxt.js (https://nuxtjs.org/)
.nuxt/
dist/

# Gatsby (https://gatsbyjs.com/)
.cache/
# public/ # Uncomment if using Gatsby instead of Next.js

# SvelteKit (https://kit.svelte.dev/)
.svelte-kit/

# VuePress (https://vuepress.vuejs.org/)
.vuepress/dist/
.temp/ # VuePress v2.x cache

# Docusaurus (https://docusaurus.io/)
.docusaurus/

# Serverless Framework (https://www.serverless.com/)
.serverless/

# FuseBox (https://fuse-box.org/)
.fusebox/

# DynamoDB Local (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html)
.dynamodb/

# Serverless Webpack directories
.webpack/

### Development Tools ###
# VSCode
.vscode-test

# Yarn v2 (https://yarnpkg.com/getting-started/migration)
.yarn/cache/
.yarn/unplugged/
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

### macOS ###
# macOS Finder and Spotlight files
.DS_Store

### Xcode (https://developer.apple.com/xcode/) ###
# Xcode-specific files and directories
build/
*.pbxuser
*.mode1v3
*.mode2v3
*.perspectivev3
xcuserdata/
*.xccheckout
*.moved-aside
DerivedData/
*.hmap
*.ipa
*.xcuserstate
**/.xcode.env.local

### Android/IntelliJ (https://developer.android.com/studio) ###
# Android Studio/IntelliJ project files
build/
.idea/
.gradle/
local.properties
*.iml
*.hprof
.cxx/
*.keystore
!debug.keystore

### Mobile Development ###
# Fastlane (https://docs.fastlane.tools/best-practices/source-control/)
**/fastlane/report.xml
**/fastlane/Preview.html
**/fastlane/screenshots/
**/fastlane/test_output/

# Metro (React Native) health check file
.metro-health-check*

# Bundle artifacts for mobile platforms
*.jsbundle

### Ruby/CocoaPods (https://guides.cocoapods.org/) ###
# Pods and vendor directories
**/Pods/
**/vendor/bundle/

### Testing ###
# Coverage reports and testing output
/coverage/

### Other ###
# TernJS (https://ternjs.net/)
.tern-port

# Eclipse (https://www.eclipse.org/)
.metadata/
tmp/

# BUCK (https://buck.build/)
buck-out/
.buckd/
android/app/libs/
android/keystores/debug.keystore

# Expo (https://expo.dev/)
.expo/

# Turborepo (https://turborepo.org/)
.turbo/

# Generated by react native bob builder
lib/

# React Native Codegen
ios/generated/
android/generated/

",
  "/.mise.toml": "[tools]
java = "zulu-17"
node = "20.18.0"",
  "/.npmrc": "node-linker=hoisted
",
  "/.qdk/meta.json": "{
  "project": "@repo/root",
  "custom": {},
  "files": [
    "./.gitignore",
    "./.mise.toml",
    "./.npmrc",
    "./.qdk/meta.json",
    "./.qdk/tree.txt",
    "./package.json",
    "./pnpm-workspace.yaml"
  ],
  "subprojects": [
    "apps/myapp",
    "packages/my-lib-a",
    "packages/my-lib-b",
    "packages/my-lib-c",
    "packages/react-native-multiply",
    "shared/tsconfig"
  ]
}
",
  "/.qdk/tree.txt": "·
└── MonorepoProject(@repo/root)
    ├── Gitignore
    │   └── TextFile(.gitignore)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    │   └── PnpmWorkspace
    │       └── YamlFile(pnpm-workspace.yaml)
    ├── PackageJson
    │   └── JsonFile(package.json)
    ├── IniFile(.npmrc)
    ├── TomlFile(.mise.toml)
    ├── ReactNativeAppProject(@repo/myapp)
    │   ├── JsonFile(.qdk/meta.json)
    │   ├── PnpmPackageManager(^9.12.0)
    │   ├── PackageJson
    │   │   └── JsonFile(package.json)
    │   └── TextFile(.qdk/tree.txt)
    ├── ReactNativeLibProject(@repo/react-native-multiply)
    │   ├── JsonFile(.qdk/meta.json)
    │   ├── PnpmPackageManager(^9.12.0)
    │   ├── PackageJson
    │   │   └── JsonFile(package.json)
    │   └── TextFile(.qdk/tree.txt)
    ├── NodeProject(@repo/my-lib-a)
    │   ├── JsonFile(.qdk/meta.json)
    │   ├── PnpmPackageManager(^9.12.0)
    │   ├── PackageJson
    │   │   └── JsonFile(package.json)
    │   └── TextFile(.qdk/tree.txt)
    ├── TsProject(@repo/my-lib-b)
    │   ├── JsonFile(.qdk/meta.json)
    │   ├── PnpmPackageManager(^9.12.0)
    │   ├── PackageJson
    │   │   └── JsonFile(package.json)
    │   ├── Typescript(^5.6.2)
    │   │   └── TsConfig
    │   │       └── TsConfigJsonFile(tsconfig.json)
    │   └── TextFile(.qdk/tree.txt)
    ├── TsProject(@repo/my-lib-c)
    │   ├── JsonFile(.qdk/meta.json)
    │   ├── PnpmPackageManager(^9.12.0)
    │   ├── PackageJson
    │   │   └── JsonFile(package.json)
    │   ├── Typescript(^5.6.2)
    │   │   └── TsConfig
    │   │       └── TsConfigJsonFile(tsconfig.json)
    │   └── TextFile(.qdk/tree.txt)
    └── NodeProject(@repo/tsconfig)
        ├── JsonFile(.qdk/meta.json)
        ├── PnpmPackageManager(^9.12.0)
        ├── PackageJson
        │   └── JsonFile(package.json)
        ├── TsConfig
        │   └── TsConfigJsonFile(node.json)
        ├── TsConfig
        │   └── TsConfigJsonFile(react-native.json)
        └── TextFile(.qdk/tree.txt)",
  "/apps/myapp/.qdk/meta.json": "{
  "project": "@repo/myapp",
  "custom": {},
  "files": ["./.qdk/meta.json", "./.qdk/tree.txt", "./package.json"],
  "subprojects": []
}
",
  "/apps/myapp/.qdk/tree.txt": "·
└── ReactNativeAppProject(@repo/myapp)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    └── PackageJson
        └── JsonFile(package.json)",
  "/apps/myapp/App.tsx": "// ...
import { Alert, Button } from 'react-native';
import { multiply } from '@repo/react-native-multiply';
import React from'react';
// ...
<Section title="Workspace lib call">
  <Button onPress={async () => {
        Alert.alert("Native multiply(2, 3)= " + await multiply(2, 3))
    }} title='Native Multiply'/>
</Section>
<Section title="See Your Changes">
  ...
</Section>
// ...",
  "/apps/myapp/android/app/build.gradle": "react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '../..'
    // root = file("../../")
    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
    reactNativeDir = file("../../../../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen
    codegenDir = file("../../../../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
    cliFile = file("../../../../node_modules/react-native/cli.js")
}",
  "/apps/myapp/android/settings.gradle": "pluginManagement { includeBuild("../../../node_modules/@react-native/gradle-plugin") }
plugins { id("com.facebook.react.settings") }
extensions.configure(com.facebook.react.ReactSettingsExtension){ ex -> ex.autolinkLibrariesFromCommand() }
rootProject.name = 'com.example.app'
include ':app'
includeBuild('../../../node_modules/@react-native/gradle-plugin')",
  "/apps/myapp/metro.config.js": "const {getDefaultConfig} = require('@react-native/metro-config');
      const path = require('node:path');
      
      // Find the project and workspace directories
      const projectRoot = __dirname;
      const monorepoRoot = path.resolve(projectRoot, '../..');
      
      const config = getDefaultConfig(projectRoot);
      
      // 1. Watch all files within the monorepo
      config.watchFolders = [monorepoRoot];
      // 2. Let Metro know where to resolve packages and in what order
      config.resolver.nodeModulesPaths = [
        path.resolve(projectRoot, 'node_modules'),
        path.resolve(monorepoRoot, 'node_modules'),
      ];
      
      module.exports = config;",
  "/apps/myapp/package.json": "{
  "name": "@repo/myapp",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "commonjs",
  "scripts": {
    "android": "react-native run-android",
    "ios": "react-native run-ios",
    "start": "react-native start",
    "test": "jest"
  },
  "dependencies": {
    "@repo/react-native-multiply": "workspace:*",
    "react": "18.3.1",
    "react-native": "0.75.4"
  },
  "devDependencies": {
    "@babel/core": "^7.20.0",
    "@babel/preset-env": "^7.20.0",
    "@babel/runtime": "^7.20.0",
    "@react-native/babel-preset": "0.75.4",
    "@react-native/eslint-config": "0.75.4",
    "@react-native/metro-config": "0.75.4",
    "@react-native/typescript-config": "0.75.4",
    "@types/react": "^18.2.44",
    "@types/react-test-renderer": "^18.0.0",
    "babel-jest": "^29.6.3",
    "del-cli": "9.9.9-mock-latest",
    "jest": "^29.6.3",
    "react-test-renderer": "18.3.1"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/myapp@0.1.0"
}
",
  "/package.json": "{
  "name": "@repo/root",
  "version": "0.1.0",
  "private": true,
  "description": "Sample QDK Project",
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "module",
  "scripts": {
    "qdk": "qdk synth",
    "qdk:check": "qdk synth --check"
  },
  "devDependencies": {
    "qdk": "9.9.9-mock-latest"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/root@0.1.0"
}
",
  "/packages/my-lib-a/.qdk/meta.json": "{
  "project": "@repo/my-lib-a",
  "custom": {},
  "files": ["./.qdk/meta.json", "./.qdk/tree.txt", "./package.json"],
  "subprojects": []
}
",
  "/packages/my-lib-a/.qdk/tree.txt": "·
└── NodeProject(@repo/my-lib-a)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    └── PackageJson
        └── JsonFile(package.json)",
  "/packages/my-lib-a/package.json": "{
  "name": "@repo/my-lib-a",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "module",
  "scripts": {},
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/my-lib-a@0.1.0"
}
",
  "/packages/my-lib-b/.qdk/meta.json": "{
  "project": "@repo/my-lib-b",
  "custom": {},
  "files": [
    "./.qdk/meta.json",
    "./.qdk/tree.txt",
    "./package.json",
    "./tsconfig.json"
  ],
  "subprojects": []
}
",
  "/packages/my-lib-b/.qdk/tree.txt": "·
└── TsProject(@repo/my-lib-b)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    ├── PackageJson
    │   └── JsonFile(package.json)
    └── Typescript(^5.6.2)
        └── TsConfig
            └── TsConfigJsonFile(tsconfig.json)",
  "/packages/my-lib-b/package.json": "{
  "name": "@repo/my-lib-b",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "module",
  "scripts": {
    "typescript": "tsc",
    "typescript:check": "tsc -p tsconfig.json --noEmit",
    "typescript:explain": "tsc -p tsconfig.json --noEmit --explainFiles > explainTypes.txt"
  },
  "dependencies": {
    "@repo/my-lib-a": "workspace:*",
    "@repo/tsconfig": "workspace:*"
  },
  "devDependencies": {
    "typescript": "^5.6.2"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/my-lib-b@0.1.0"
}
",
  "/packages/my-lib-b/tsconfig.json": "{
  "extends": ["@repo/tsconfig/node.json"]
}
",
  "/packages/my-lib-c/.qdk/meta.json": "{
  "project": "@repo/my-lib-c",
  "custom": {},
  "files": [
    "./.qdk/meta.json",
    "./.qdk/tree.txt",
    "./package.json",
    "./tsconfig.json"
  ],
  "subprojects": []
}
",
  "/packages/my-lib-c/.qdk/tree.txt": "·
└── TsProject(@repo/my-lib-c)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    ├── PackageJson
    │   └── JsonFile(package.json)
    └── Typescript(^5.6.2)
        └── TsConfig
            └── TsConfigJsonFile(tsconfig.json)",
  "/packages/my-lib-c/package.json": "{
  "name": "@repo/my-lib-c",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "module",
  "scripts": {
    "clean": "del-cli dist",
    "typescript": "tsc",
    "typescript:check": "tsc -p tsconfig.json --noEmit",
    "typescript:explain": "tsc -p tsconfig.json --noEmit --explainFiles > explainTypes.txt"
  },
  "dependencies": {
    "@repo/my-lib-b": "workspace:*",
    "@repo/tsconfig": "workspace:*",
    "lodash": "^4.17.21",
    "moment": "9.9.9-mock-latest"
  },
  "devDependencies": {
    "del-cli": "^6.0.0",
    "typescript": "^5.6.2"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/my-lib-c@0.1.0"
}
",
  "/packages/my-lib-c/tsconfig.json": "{
  "extends": ["@repo/tsconfig/node.json"]
}
",
  "/packages/react-native-multiply/.qdk/meta.json": "{
  "project": "@repo/react-native-multiply",
  "custom": {},
  "files": ["./.qdk/meta.json", "./.qdk/tree.txt", "./package.json"],
  "subprojects": []
}
",
  "/packages/react-native-multiply/.qdk/tree.txt": "·
└── ReactNativeLibProject(@repo/react-native-multiply)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    └── PackageJson
        └── JsonFile(package.json)",
  "/packages/react-native-multiply/package.json": "{
  "name": "@repo/react-native-multiply",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "commonjs",
  "exports": {
    ".": {
      "import": {
        "types": "./lib/typescript/module/src/index.d.ts",
        "default": "./lib/module/index.js"
      },
      "require": {
        "types": "./lib/typescript/commonjs/src/index.d.ts",
        "default": "./lib/commonjs/index.js"
      }
    }
  },
  "main": "./lib/commonjs/index.js",
  "module": "./lib/module/index.js",
  "source": "./src/index.tsx",
  "files": [
    "src",
    "lib",
    "android",
    "ios",
    "cpp",
    "*.podspec",
    "react-native.config.json",
    "!ios/build",
    "!android/build",
    "!android/gradle",
    "!android/gradlew",
    "!android/gradlew.bat",
    "!android/local.properties",
    "!**/__tests__",
    "!**/__fixtures__",
    "!**/__mocks__",
    "!**/.*"
  ],
  "scripts": {
    "build": "bob build",
    "clean": "del-cli android/build example/android/build example/android/app/build example/ios/build lib",
    "prepare": "bob build",
    "test": "jest",
    "typecheck": "tsc"
  },
  "jest": {
    "modulePathIgnorePatterns": [
      "<rootDir>/example/node_modules",
      "<rootDir>/lib/"
    ],
    "preset": "react-native"
  },
  "devDependencies": {
    "@types/jest": "^29.5.5",
    "@types/react": "^18.2.44",
    "del-cli": "9.9.9-mock-latest",
    "jest": "^29.7.0",
    "react": "18.3.1",
    "react-native": "0.75.4",
    "react-native-builder-bob": "^0.30.2"
  },
  "peerDependencies": {
    "react": "*",
    "react-native": "*"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "react-native-builder-bob": {
    "source": "src",
    "output": "lib",
    "targets": [
      [
        "commonjs",
        {
          "esm": true
        }
      ],
      [
        "module",
        {
          "esm": true
        }
      ],
      [
        "typescript",
        {
          "project": "tsconfig.build.json",
          "esm": true
        }
      ]
    ]
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/react-native-multiply@0.1.0"
}
",
  "/pnpm-workspace.yaml": "packages:
  - apps/myapp
  - packages/react-native-multiply
  - packages/my-lib-a
  - packages/my-lib-b
  - packages/my-lib-c
  - shared/tsconfig
",
  "/shared/tsconfig/.qdk/meta.json": "{
  "project": "@repo/tsconfig",
  "custom": {},
  "files": [
    "./.qdk/meta.json",
    "./.qdk/tree.txt",
    "./node.json",
    "./package.json",
    "./react-native.json"
  ],
  "subprojects": []
}
",
  "/shared/tsconfig/.qdk/tree.txt": "·
└── NodeProject(@repo/tsconfig)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    ├── PackageJson
    │   └── JsonFile(package.json)
    ├── TsConfig
    │   └── TsConfigJsonFile(node.json)
    └── TsConfig
        └── TsConfigJsonFile(react-native.json)",
  "/shared/tsconfig/node.json": "{
  "extends": ["@tsconfig/node20"]
}
",
  "/shared/tsconfig/package.json": "{
  "name": "@repo/tsconfig",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "module",
  "scripts": {},
  "devDependencies": {
    "@tsconfig/node20": "^20.1.4",
    "@tsconfig/react-native": "9.9.9-mock-latest"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/tsconfig@0.1.0"
}
",
  "/shared/tsconfig/react-native.json": "{
  "extends": ["@tsconfig/react-native"]
}
",
}
`;

exports[`monorepo template > synthetize a monorepo template and delete orphan files 1`] = `
"/
├─ .gitignore
├─ .mise.toml
├─ .npmrc
├─ .qdk/
│  ├─ meta.json
│  └─ tree.txt
├─ apps/
│  ├─ my-app/
│  │  ├─ .qdk/
│  │  │  └─ meta.json
│  │  └─ orphan.txt
│  └─ myapp/
│     ├─ .qdk/
│     │  ├─ meta.json
│     │  └─ tree.txt
│     ├─ App.tsx
│     ├─ android/
│     │  ├─ app/
│     │  │  └─ build.gradle
│     │  └─ settings.gradle
│     ├─ metro.config.js
│     └─ package.json
├─ package.json
├─ packages/
│  ├─ my-lib-a/
│  │  ├─ .qdk/
│  │  │  ├─ meta.json
│  │  │  └─ tree.txt
│  │  └─ package.json
│  ├─ my-lib-b/
│  │  ├─ .qdk/
│  │  │  ├─ meta.json
│  │  │  └─ tree.txt
│  │  ├─ package.json
│  │  └─ tsconfig.json
│  ├─ my-lib-c/
│  │  ├─ .qdk/
│  │  │  ├─ meta.json
│  │  │  └─ tree.txt
│  │  ├─ package.json
│  │  └─ tsconfig.json
│  └─ react-native-multiply/
│     ├─ .qdk/
│     │  ├─ meta.json
│     │  └─ tree.txt
│     └─ package.json
├─ pnpm-workspace.yaml
└─ shared/
   └─ tsconfig/
      ├─ .qdk/
      │  ├─ meta.json
      │  └─ tree.txt
      ├─ node.json
      ├─ package.json
      └─ react-native.json"
`;

exports[`monorepo template > synthetize a monorepo template and delete orphan files 2`] = `
{
  "/.gitignore": "
### Node.js Standard ###
# Logs generated by Node.js and related tools
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data files (PID files, seeds, locks)
pids
*.pid
*.seed
*.pid.lock

# Dependency directories (Node.js and package managers)
node_modules/
jspm_packages/
web_modules/ # Snowpack (https://snowpack.dev/)

# Build outputs and binary addons (https://nodejs.org/api/addons.html)
build/Release
.lock-wscript

# Coverage files used by testing tools like Istanbul/nyc
coverage/
*.lcov
.nyc_output

# Cache directories
.npm
.cache
.parcel-cache # Parcel (https://parceljs.org/)
.eslintcache # ESLint
.stylelintcache # Stylelint
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# TypeScript cache
*.tsbuildinfo

# Yarn Integrity file
.yarn-integrity

# REPL history
.node_repl_history

# Output from 'npm pack'
*.tgz

### Environment Variables ###
# dotenv environment variable files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

### Framework-specific Build Outputs ###
# Next.js (https://nextjs.org/)
.next/
out/

# Nuxt.js (https://nuxtjs.org/)
.nuxt/
dist/

# Gatsby (https://gatsbyjs.com/)
.cache/
# public/ # Uncomment if using Gatsby instead of Next.js

# SvelteKit (https://kit.svelte.dev/)
.svelte-kit/

# VuePress (https://vuepress.vuejs.org/)
.vuepress/dist/
.temp/ # VuePress v2.x cache

# Docusaurus (https://docusaurus.io/)
.docusaurus/

# Serverless Framework (https://www.serverless.com/)
.serverless/

# FuseBox (https://fuse-box.org/)
.fusebox/

# DynamoDB Local (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html)
.dynamodb/

# Serverless Webpack directories
.webpack/

### Development Tools ###
# VSCode
.vscode-test

# Yarn v2 (https://yarnpkg.com/getting-started/migration)
.yarn/cache/
.yarn/unplugged/
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

### macOS ###
# macOS Finder and Spotlight files
.DS_Store

### Xcode (https://developer.apple.com/xcode/) ###
# Xcode-specific files and directories
build/
*.pbxuser
*.mode1v3
*.mode2v3
*.perspectivev3
xcuserdata/
*.xccheckout
*.moved-aside
DerivedData/
*.hmap
*.ipa
*.xcuserstate
**/.xcode.env.local

### Android/IntelliJ (https://developer.android.com/studio) ###
# Android Studio/IntelliJ project files
build/
.idea/
.gradle/
local.properties
*.iml
*.hprof
.cxx/
*.keystore
!debug.keystore

### Mobile Development ###
# Fastlane (https://docs.fastlane.tools/best-practices/source-control/)
**/fastlane/report.xml
**/fastlane/Preview.html
**/fastlane/screenshots/
**/fastlane/test_output/

# Metro (React Native) health check file
.metro-health-check*

# Bundle artifacts for mobile platforms
*.jsbundle

### Ruby/CocoaPods (https://guides.cocoapods.org/) ###
# Pods and vendor directories
**/Pods/
**/vendor/bundle/

### Testing ###
# Coverage reports and testing output
/coverage/

### Other ###
# TernJS (https://ternjs.net/)
.tern-port

# Eclipse (https://www.eclipse.org/)
.metadata/
tmp/

# BUCK (https://buck.build/)
buck-out/
.buckd/
android/app/libs/
android/keystores/debug.keystore

# Expo (https://expo.dev/)
.expo/

# Turborepo (https://turborepo.org/)
.turbo/

# Generated by react native bob builder
lib/

# React Native Codegen
ios/generated/
android/generated/

",
  "/.mise.toml": "[tools]
java = "zulu-17"
node = "20.18.0"",
  "/.npmrc": "node-linker=hoisted
",
  "/.qdk/meta.json": "{
  "project": "@repo/root",
  "custom": {},
  "files": [
    "./.gitignore",
    "./.mise.toml",
    "./.npmrc",
    "./.qdk/meta.json",
    "./.qdk/tree.txt",
    "./package.json",
    "./pnpm-workspace.yaml"
  ],
  "subprojects": [
    "apps/myapp",
    "packages/my-lib-a",
    "packages/my-lib-b",
    "packages/my-lib-c",
    "packages/react-native-multiply",
    "shared/tsconfig"
  ]
}
",
  "/.qdk/tree.txt": "·
└── MonorepoProject(@repo/root)
    ├── Gitignore
    │   └── TextFile(.gitignore)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    │   └── PnpmWorkspace
    │       └── YamlFile(pnpm-workspace.yaml)
    ├── PackageJson
    │   └── JsonFile(package.json)
    ├── IniFile(.npmrc)
    ├── TomlFile(.mise.toml)
    ├── ReactNativeAppProject(@repo/myapp)
    │   ├── JsonFile(.qdk/meta.json)
    │   ├── PnpmPackageManager(^9.12.0)
    │   ├── PackageJson
    │   │   └── JsonFile(package.json)
    │   └── TextFile(.qdk/tree.txt)
    ├── ReactNativeLibProject(@repo/react-native-multiply)
    │   ├── JsonFile(.qdk/meta.json)
    │   ├── PnpmPackageManager(^9.12.0)
    │   ├── PackageJson
    │   │   └── JsonFile(package.json)
    │   └── TextFile(.qdk/tree.txt)
    ├── NodeProject(@repo/my-lib-a)
    │   ├── JsonFile(.qdk/meta.json)
    │   ├── PnpmPackageManager(^9.12.0)
    │   ├── PackageJson
    │   │   └── JsonFile(package.json)
    │   └── TextFile(.qdk/tree.txt)
    ├── TsProject(@repo/my-lib-b)
    │   ├── JsonFile(.qdk/meta.json)
    │   ├── PnpmPackageManager(^9.12.0)
    │   ├── PackageJson
    │   │   └── JsonFile(package.json)
    │   ├── Typescript(^5.6.2)
    │   │   └── TsConfig
    │   │       └── TsConfigJsonFile(tsconfig.json)
    │   └── TextFile(.qdk/tree.txt)
    ├── TsProject(@repo/my-lib-c)
    │   ├── JsonFile(.qdk/meta.json)
    │   ├── PnpmPackageManager(^9.12.0)
    │   ├── PackageJson
    │   │   └── JsonFile(package.json)
    │   ├── Typescript(^5.6.2)
    │   │   └── TsConfig
    │   │       └── TsConfigJsonFile(tsconfig.json)
    │   └── TextFile(.qdk/tree.txt)
    └── NodeProject(@repo/tsconfig)
        ├── JsonFile(.qdk/meta.json)
        ├── PnpmPackageManager(^9.12.0)
        ├── PackageJson
        │   └── JsonFile(package.json)
        ├── TsConfig
        │   └── TsConfigJsonFile(node.json)
        ├── TsConfig
        │   └── TsConfigJsonFile(react-native.json)
        └── TextFile(.qdk/tree.txt)",
  "/apps/my-app/.qdk/meta.json": "{"files":[".qdk/meta.json","./orphan.txt"]}",
  "/apps/my-app/orphan.txt": "some file data",
  "/apps/myapp/.qdk/meta.json": "{
  "project": "@repo/myapp",
  "custom": {},
  "files": ["./.qdk/meta.json", "./.qdk/tree.txt", "./package.json"],
  "subprojects": []
}
",
  "/apps/myapp/.qdk/tree.txt": "·
└── ReactNativeAppProject(@repo/myapp)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    └── PackageJson
        └── JsonFile(package.json)",
  "/apps/myapp/App.tsx": "// ...
import { Alert, Button } from 'react-native';
import { multiply } from '@repo/react-native-multiply';
import React from'react';
// ...
<Section title="Workspace lib call">
  <Button onPress={async () => {
        Alert.alert("Native multiply(2, 3)= " + await multiply(2, 3))
    }} title='Native Multiply'/>
</Section>
<Section title="See Your Changes">
  ...
</Section>
// ...",
  "/apps/myapp/android/app/build.gradle": "react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '../..'
    // root = file("../../")
    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
    reactNativeDir = file("../../../../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen
    codegenDir = file("../../../../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
    cliFile = file("../../../../node_modules/react-native/cli.js")
}",
  "/apps/myapp/android/settings.gradle": "pluginManagement { includeBuild("../../../node_modules/@react-native/gradle-plugin") }
plugins { id("com.facebook.react.settings") }
extensions.configure(com.facebook.react.ReactSettingsExtension){ ex -> ex.autolinkLibrariesFromCommand() }
rootProject.name = 'com.example.app'
include ':app'
includeBuild('../../../node_modules/@react-native/gradle-plugin')",
  "/apps/myapp/metro.config.js": "const {getDefaultConfig} = require('@react-native/metro-config');
      const path = require('node:path');
      
      // Find the project and workspace directories
      const projectRoot = __dirname;
      const monorepoRoot = path.resolve(projectRoot, '../..');
      
      const config = getDefaultConfig(projectRoot);
      
      // 1. Watch all files within the monorepo
      config.watchFolders = [monorepoRoot];
      // 2. Let Metro know where to resolve packages and in what order
      config.resolver.nodeModulesPaths = [
        path.resolve(projectRoot, 'node_modules'),
        path.resolve(monorepoRoot, 'node_modules'),
      ];
      
      module.exports = config;",
  "/apps/myapp/package.json": "{
  "name": "@repo/myapp",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "commonjs",
  "scripts": {
    "android": "react-native run-android",
    "ios": "react-native run-ios",
    "start": "react-native start",
    "test": "jest"
  },
  "dependencies": {
    "@repo/react-native-multiply": "workspace:*",
    "react": "18.3.1",
    "react-native": "0.75.4"
  },
  "devDependencies": {
    "@babel/core": "^7.20.0",
    "@babel/preset-env": "^7.20.0",
    "@babel/runtime": "^7.20.0",
    "@react-native/babel-preset": "0.75.4",
    "@react-native/eslint-config": "0.75.4",
    "@react-native/metro-config": "0.75.4",
    "@react-native/typescript-config": "0.75.4",
    "@types/react": "^18.2.44",
    "@types/react-test-renderer": "^18.0.0",
    "babel-jest": "^29.6.3",
    "del-cli": "9.9.9-mock-latest",
    "jest": "^29.6.3",
    "react-test-renderer": "18.3.1"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/myapp@0.1.0"
}
",
  "/package.json": "{
  "name": "@repo/root",
  "version": "0.1.0",
  "private": true,
  "description": "Sample QDK Project",
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "module",
  "scripts": {
    "qdk": "qdk synth",
    "qdk:check": "qdk synth --check"
  },
  "devDependencies": {
    "qdk": "9.9.9-mock-latest"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/root@0.1.0"
}
",
  "/packages/my-lib-a/.qdk/meta.json": "{
  "project": "@repo/my-lib-a",
  "custom": {},
  "files": ["./.qdk/meta.json", "./.qdk/tree.txt", "./package.json"],
  "subprojects": []
}
",
  "/packages/my-lib-a/.qdk/tree.txt": "·
└── NodeProject(@repo/my-lib-a)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    └── PackageJson
        └── JsonFile(package.json)",
  "/packages/my-lib-a/package.json": "{
  "name": "@repo/my-lib-a",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "module",
  "scripts": {},
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/my-lib-a@0.1.0"
}
",
  "/packages/my-lib-b/.qdk/meta.json": "{
  "project": "@repo/my-lib-b",
  "custom": {},
  "files": [
    "./.qdk/meta.json",
    "./.qdk/tree.txt",
    "./package.json",
    "./tsconfig.json"
  ],
  "subprojects": []
}
",
  "/packages/my-lib-b/.qdk/tree.txt": "·
└── TsProject(@repo/my-lib-b)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    ├── PackageJson
    │   └── JsonFile(package.json)
    └── Typescript(^5.6.2)
        └── TsConfig
            └── TsConfigJsonFile(tsconfig.json)",
  "/packages/my-lib-b/package.json": "{
  "name": "@repo/my-lib-b",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "module",
  "scripts": {
    "typescript": "tsc",
    "typescript:check": "tsc -p tsconfig.json --noEmit",
    "typescript:explain": "tsc -p tsconfig.json --noEmit --explainFiles > explainTypes.txt"
  },
  "dependencies": {
    "@repo/my-lib-a": "workspace:*",
    "@repo/tsconfig": "workspace:*"
  },
  "devDependencies": {
    "typescript": "^5.6.2"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/my-lib-b@0.1.0"
}
",
  "/packages/my-lib-b/tsconfig.json": "{
  "extends": ["@repo/tsconfig/node.json"]
}
",
  "/packages/my-lib-c/.qdk/meta.json": "{
  "project": "@repo/my-lib-c",
  "custom": {},
  "files": [
    "./.qdk/meta.json",
    "./.qdk/tree.txt",
    "./package.json",
    "./tsconfig.json"
  ],
  "subprojects": []
}
",
  "/packages/my-lib-c/.qdk/tree.txt": "·
└── TsProject(@repo/my-lib-c)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    ├── PackageJson
    │   └── JsonFile(package.json)
    └── Typescript(^5.6.2)
        └── TsConfig
            └── TsConfigJsonFile(tsconfig.json)",
  "/packages/my-lib-c/package.json": "{
  "name": "@repo/my-lib-c",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "module",
  "scripts": {
    "clean": "del-cli dist",
    "typescript": "tsc",
    "typescript:check": "tsc -p tsconfig.json --noEmit",
    "typescript:explain": "tsc -p tsconfig.json --noEmit --explainFiles > explainTypes.txt"
  },
  "dependencies": {
    "@repo/my-lib-b": "workspace:*",
    "@repo/tsconfig": "workspace:*",
    "lodash": "^4.17.21",
    "moment": "9.9.9-mock-latest"
  },
  "devDependencies": {
    "del-cli": "^6.0.0",
    "typescript": "^5.6.2"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/my-lib-c@0.1.0"
}
",
  "/packages/my-lib-c/tsconfig.json": "{
  "extends": ["@repo/tsconfig/node.json"]
}
",
  "/packages/react-native-multiply/.qdk/meta.json": "{
  "project": "@repo/react-native-multiply",
  "custom": {},
  "files": ["./.qdk/meta.json", "./.qdk/tree.txt", "./package.json"],
  "subprojects": []
}
",
  "/packages/react-native-multiply/.qdk/tree.txt": "·
└── ReactNativeLibProject(@repo/react-native-multiply)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    └── PackageJson
        └── JsonFile(package.json)",
  "/packages/react-native-multiply/package.json": "{
  "name": "@repo/react-native-multiply",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "commonjs",
  "exports": {
    ".": {
      "import": {
        "types": "./lib/typescript/module/src/index.d.ts",
        "default": "./lib/module/index.js"
      },
      "require": {
        "types": "./lib/typescript/commonjs/src/index.d.ts",
        "default": "./lib/commonjs/index.js"
      }
    }
  },
  "main": "./lib/commonjs/index.js",
  "module": "./lib/module/index.js",
  "source": "./src/index.tsx",
  "files": [
    "src",
    "lib",
    "android",
    "ios",
    "cpp",
    "*.podspec",
    "react-native.config.json",
    "!ios/build",
    "!android/build",
    "!android/gradle",
    "!android/gradlew",
    "!android/gradlew.bat",
    "!android/local.properties",
    "!**/__tests__",
    "!**/__fixtures__",
    "!**/__mocks__",
    "!**/.*"
  ],
  "scripts": {
    "build": "bob build",
    "clean": "del-cli android/build example/android/build example/android/app/build example/ios/build lib",
    "prepare": "bob build",
    "test": "jest",
    "typecheck": "tsc"
  },
  "jest": {
    "modulePathIgnorePatterns": [
      "<rootDir>/example/node_modules",
      "<rootDir>/lib/"
    ],
    "preset": "react-native"
  },
  "devDependencies": {
    "@types/jest": "^29.5.5",
    "@types/react": "^18.2.44",
    "del-cli": "9.9.9-mock-latest",
    "jest": "^29.7.0",
    "react": "18.3.1",
    "react-native": "0.75.4",
    "react-native-builder-bob": "^0.30.2"
  },
  "peerDependencies": {
    "react": "*",
    "react-native": "*"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "react-native-builder-bob": {
    "source": "src",
    "output": "lib",
    "targets": [
      [
        "commonjs",
        {
          "esm": true
        }
      ],
      [
        "module",
        {
          "esm": true
        }
      ],
      [
        "typescript",
        {
          "project": "tsconfig.build.json",
          "esm": true
        }
      ]
    ]
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/react-native-multiply@0.1.0"
}
",
  "/pnpm-workspace.yaml": "packages:
  - apps/myapp
  - packages/react-native-multiply
  - packages/my-lib-a
  - packages/my-lib-b
  - packages/my-lib-c
  - shared/tsconfig
",
  "/shared/tsconfig/.qdk/meta.json": "{
  "project": "@repo/tsconfig",
  "custom": {},
  "files": [
    "./.qdk/meta.json",
    "./.qdk/tree.txt",
    "./node.json",
    "./package.json",
    "./react-native.json"
  ],
  "subprojects": []
}
",
  "/shared/tsconfig/.qdk/tree.txt": "·
└── NodeProject(@repo/tsconfig)
    ├── JsonFile(.qdk/meta.json)
    ├── PnpmPackageManager(^9.12.0)
    ├── PackageJson
    │   └── JsonFile(package.json)
    ├── TsConfig
    │   └── TsConfigJsonFile(node.json)
    └── TsConfig
        └── TsConfigJsonFile(react-native.json)",
  "/shared/tsconfig/node.json": "{
  "extends": ["@tsconfig/node20"]
}
",
  "/shared/tsconfig/package.json": "{
  "name": "@repo/tsconfig",
  "version": "0.1.0",
  "private": true,
  "license": "MIT",
  "author": {
    "name": "Gabriel Moreira"
  },
  "type": "module",
  "scripts": {},
  "devDependencies": {
    "@tsconfig/node20": "^20.1.4",
    "@tsconfig/react-native": "9.9.9-mock-latest"
  },
  "engine": {
    "pnpm": "^9.12.0"
  },
  "readme": "ERROR: No README data found!",
  "_id": "@repo/tsconfig@0.1.0"
}
",
  "/shared/tsconfig/react-native.json": "{
  "extends": ["@tsconfig/react-native"]
}
",
}
`;
