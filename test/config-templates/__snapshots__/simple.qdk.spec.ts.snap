// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`simple template > synthetize a simple template 1`] = `
"/
├─ .gitignore
├─ .prettierrc
├─ .qdk/
│  ├─ meta.json
│  └─ tree.txt
├─ eslint.config.js
├─ package.json
├─ src/
│  ├─ config.json
│  └─ index.ts
├─ test/
│  └─ index.spec.ts
└─ tsconfig.json"
`;

exports[`simple template > synthetize a simple template 2`] = `
{
  "/.gitignore": "
### Node.js Standard ###
# Logs generated by Node.js and related tools
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data files (PID files, seeds, locks)
pids
*.pid
*.seed
*.pid.lock

# Dependency directories (Node.js and package managers)
node_modules/
jspm_packages/
web_modules/ # Snowpack (https://snowpack.dev/)

# Build outputs and binary addons (https://nodejs.org/api/addons.html)
build/Release
.lock-wscript

# Coverage files used by testing tools like Istanbul/nyc
coverage/
*.lcov
.nyc_output

# Cache directories
.npm
.cache
.parcel-cache # Parcel (https://parceljs.org/)
.eslintcache # ESLint
.stylelintcache # Stylelint
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# TypeScript cache
*.tsbuildinfo

# Yarn Integrity file
.yarn-integrity

# REPL history
.node_repl_history

# Output from 'npm pack'
*.tgz

### Environment Variables ###
# dotenv environment variable files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

### Framework-specific Build Outputs ###
# Next.js (https://nextjs.org/)
.next/
out/

# Nuxt.js (https://nuxtjs.org/)
.nuxt/
dist/

# Gatsby (https://gatsbyjs.com/)
.cache/
# public/ # Uncomment if using Gatsby instead of Next.js

# SvelteKit (https://kit.svelte.dev/)
.svelte-kit/

# VuePress (https://vuepress.vuejs.org/)
.vuepress/dist/
.temp/ # VuePress v2.x cache

# Docusaurus (https://docusaurus.io/)
.docusaurus/

# Serverless Framework (https://www.serverless.com/)
.serverless/

# FuseBox (https://fuse-box.org/)
.fusebox/

# DynamoDB Local (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html)
.dynamodb/

# Serverless Webpack directories
.webpack/

### Development Tools ###
# VSCode
.vscode-test

# Yarn v2 (https://yarnpkg.com/getting-started/migration)
.yarn/cache/
.yarn/unplugged/
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

### macOS ###
# macOS Finder and Spotlight files
.DS_Store

### Xcode (https://developer.apple.com/xcode/) ###
# Xcode-specific files and directories
build/
*.pbxuser
*.mode1v3
*.mode2v3
*.perspectivev3
xcuserdata/
*.xccheckout
*.moved-aside
DerivedData/
*.hmap
*.ipa
*.xcuserstate
**/.xcode.env.local

### Android/IntelliJ (https://developer.android.com/studio) ###
# Android Studio/IntelliJ project files
build/
.idea/
.gradle/
local.properties
*.iml
*.hprof
.cxx/
*.keystore
!debug.keystore

### Mobile Development ###
# Fastlane (https://docs.fastlane.tools/best-practices/source-control/)
**/fastlane/report.xml
**/fastlane/Preview.html
**/fastlane/screenshots/
**/fastlane/test_output/

# Metro (React Native) health check file
.metro-health-check*

# Bundle artifacts for mobile platforms
*.jsbundle

### Ruby/CocoaPods (https://guides.cocoapods.org/) ###
# Pods and vendor directories
**/Pods/
**/vendor/bundle/

### Testing ###
# Coverage reports and testing output
/coverage/

### Other ###
# TernJS (https://ternjs.net/)
.tern-port

# Eclipse (https://www.eclipse.org/)
.metadata/
tmp/

# BUCK (https://buck.build/)
buck-out/
.buckd/
android/app/libs/
android/keystores/debug.keystore

# Expo (https://expo.dev/)
.expo/

# Turborepo (https://turborepo.org/)
.turbo/

# Generated by react native bob builder
lib/

# React Native Codegen
ios/generated/
android/generated/

",
  "/.prettierrc": "{
  "arrowParens": "avoid",
  "singleQuote": true,
  "overrides": [],
  "plugins": ["prettier-plugin-organize-imports"]
}
",
  "/.qdk/meta.json": "{
  "project": "qdk-sample",
  "custom": {},
  "files": [
    "./.gitignore",
    "./.prettierrc",
    "./.qdk/meta.json",
    "./.qdk/tree.txt",
    "./eslint.config.js",
    "./package.json",
    "./tsconfig.json"
  ],
  "subprojects": []
}
",
  "/.qdk/tree.txt": "·
└── Project(qdk-sample)
    ├── Gitignore
    │   └── TextFile(.gitignore)
    ├── JsonFile(.qdk/meta.json)
    ├── NpmPackageManager
    ├── PackageJson
    │   └── JsonFile(package.json)
    ├── Typescript(^5.6.2)
    │   └── TsConfig
    │       └── TsConfigJsonFile(tsconfig.json)
    ├── EsLint
    │   ├── Prettier
    │   │   └── JsonFile(.prettierrc)
    │   └── TemplateFile(eslint.config.js)
    └── MySampleFiles
        └── SampleFiles(SampleFiles)
            ├── TextFile(src/index.ts)
            ├── JsonFile(src/config.json)
            └── TextFile(test/index.spec.ts)",
  "/eslint.config.js": "import globals from 'globals';
import eslint from '@eslint/js';
import tseslint from 'typescript-eslint';
import eslintPluginPrettierRecommended from 'eslint-plugin-prettier/recommended';
export default tseslint.config(
  eslint.configs.recommended,
  ...tseslint.configs.recommendedTypeChecked,
  ...tseslint.configs.stylisticTypeChecked,
  eslintPluginPrettierRecommended,
  { files: ['eslint.config.js', 'src/**/*.ts', 'test/**/*.ts'] },
  { ignores: ['dist/**/*'] },
  { languageOptions: { globals: globals.nodeBuiltin } },
  {
    languageOptions: {
      parserOptions: {
        projectService: { allowDefaultProject: ['*.config.{mjs,js}'] },
      },
    },
  },
  { rules: { '@typescript-eslint/no-unsafe-call': 'off' } },
  {
    languageOptions: {
      parserOptions: { tsconfigRootDir: import.meta.dirname },
    },
  },
);
",
  "/package.json": "{
  "name": "qdk-sample",
  "version": "0.1.0",
  "description": "Sample QDK Project",
  "license": "MIT",
  "type": "module",
  "module": "dist/src/index.js",
  "scripts": {
    "eslint": "eslint",
    "eslint:fix": "eslint --fix",
    "format": "prettier . --write",
    "qdk": "qdk synth",
    "qdk:check": "qdk synth --check",
    "test": "vitest",
    "typescript": "tsc",
    "typescript:check": "tsc -p tsconfig.json --noEmit",
    "typescript:explain": "tsc -p tsconfig.json --noEmit --explainFiles > explainTypes.txt"
  },
  "devDependencies": {
    "@eslint/js": "^9.12.0",
    "@tsconfig/node20": "^20.1.4",
    "eslint": "^9.0.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "globals": "^15.11.0",
    "prettier": "^3.0.0",
    "prettier-plugin-organize-imports": "^4.1.0",
    "qdk": "9.9.9-mock-latest",
    "typescript": "^5.6.2",
    "typescript-eslint": "^8.9.0",
    "vitest": "9.9.9-mock-latest"
  },
  "readme": "ERROR: No README data found!",
  "_id": "qdk-sample@0.1.0"
}
",
  "/src/config.json": "{
  "name": "Alice 2024-10-06T20:57:10.606Z"
}
",
  "/src/index.ts": "import { name } from './config.json';
export const sayHello = () => 'Hello ' + name;
",
  "/test/index.spec.ts": "import { describe, expect, it } from 'vitest';
import { sayHello } from '../src/index.js';

describe('index', () => {
  it('say hello', () => {
    // When
    const result = sayHello();
    // Then
    expect(result).toMatch(/^Hello Alice .+$/g);
  });
});
",
  "/tsconfig.json": "{
  "extends": ["@tsconfig/node20"],
  "include": [
    "qdk.config.ts",
    "eslint.config.mjs",
    "src/**/*.ts",
    "test/**/*.ts",
    "qdk.config.ts",
    "qdk/**/*.ts"
  ],
  "compilerOptions": {
    "outDir": "dist",
    "strictNullChecks": true,
    "resolveJsonModule": true
  }
}
",
}
`;

exports[`simple template > synthetize a simple template and delete orphan files 1`] = `
"/
├─ .gitignore
├─ .prettierrc
├─ .qdk/
│  ├─ meta.json
│  └─ tree.txt
├─ eslint.config.js
├─ package.json
├─ src/
│  ├─ config.json
│  └─ index.ts
├─ test/
│  └─ index.spec.ts
└─ tsconfig.json"
`;

exports[`simple template > synthetize a simple template and delete orphan files 2`] = `
{
  "/.gitignore": "
### Node.js Standard ###
# Logs generated by Node.js and related tools
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data files (PID files, seeds, locks)
pids
*.pid
*.seed
*.pid.lock

# Dependency directories (Node.js and package managers)
node_modules/
jspm_packages/
web_modules/ # Snowpack (https://snowpack.dev/)

# Build outputs and binary addons (https://nodejs.org/api/addons.html)
build/Release
.lock-wscript

# Coverage files used by testing tools like Istanbul/nyc
coverage/
*.lcov
.nyc_output

# Cache directories
.npm
.cache
.parcel-cache # Parcel (https://parceljs.org/)
.eslintcache # ESLint
.stylelintcache # Stylelint
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# TypeScript cache
*.tsbuildinfo

# Yarn Integrity file
.yarn-integrity

# REPL history
.node_repl_history

# Output from 'npm pack'
*.tgz

### Environment Variables ###
# dotenv environment variable files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

### Framework-specific Build Outputs ###
# Next.js (https://nextjs.org/)
.next/
out/

# Nuxt.js (https://nuxtjs.org/)
.nuxt/
dist/

# Gatsby (https://gatsbyjs.com/)
.cache/
# public/ # Uncomment if using Gatsby instead of Next.js

# SvelteKit (https://kit.svelte.dev/)
.svelte-kit/

# VuePress (https://vuepress.vuejs.org/)
.vuepress/dist/
.temp/ # VuePress v2.x cache

# Docusaurus (https://docusaurus.io/)
.docusaurus/

# Serverless Framework (https://www.serverless.com/)
.serverless/

# FuseBox (https://fuse-box.org/)
.fusebox/

# DynamoDB Local (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html)
.dynamodb/

# Serverless Webpack directories
.webpack/

### Development Tools ###
# VSCode
.vscode-test

# Yarn v2 (https://yarnpkg.com/getting-started/migration)
.yarn/cache/
.yarn/unplugged/
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

### macOS ###
# macOS Finder and Spotlight files
.DS_Store

### Xcode (https://developer.apple.com/xcode/) ###
# Xcode-specific files and directories
build/
*.pbxuser
*.mode1v3
*.mode2v3
*.perspectivev3
xcuserdata/
*.xccheckout
*.moved-aside
DerivedData/
*.hmap
*.ipa
*.xcuserstate
**/.xcode.env.local

### Android/IntelliJ (https://developer.android.com/studio) ###
# Android Studio/IntelliJ project files
build/
.idea/
.gradle/
local.properties
*.iml
*.hprof
.cxx/
*.keystore
!debug.keystore

### Mobile Development ###
# Fastlane (https://docs.fastlane.tools/best-practices/source-control/)
**/fastlane/report.xml
**/fastlane/Preview.html
**/fastlane/screenshots/
**/fastlane/test_output/

# Metro (React Native) health check file
.metro-health-check*

# Bundle artifacts for mobile platforms
*.jsbundle

### Ruby/CocoaPods (https://guides.cocoapods.org/) ###
# Pods and vendor directories
**/Pods/
**/vendor/bundle/

### Testing ###
# Coverage reports and testing output
/coverage/

### Other ###
# TernJS (https://ternjs.net/)
.tern-port

# Eclipse (https://www.eclipse.org/)
.metadata/
tmp/

# BUCK (https://buck.build/)
buck-out/
.buckd/
android/app/libs/
android/keystores/debug.keystore

# Expo (https://expo.dev/)
.expo/

# Turborepo (https://turborepo.org/)
.turbo/

# Generated by react native bob builder
lib/

# React Native Codegen
ios/generated/
android/generated/

",
  "/.prettierrc": "{
  "arrowParens": "avoid",
  "singleQuote": true,
  "overrides": [],
  "plugins": ["prettier-plugin-organize-imports"]
}
",
  "/.qdk/meta.json": "{
  "project": "qdk-sample",
  "custom": {},
  "files": [
    "./.gitignore",
    "./.prettierrc",
    "./.qdk/meta.json",
    "./.qdk/tree.txt",
    "./eslint.config.js",
    "./package.json",
    "./tsconfig.json"
  ],
  "subprojects": []
}
",
  "/.qdk/tree.txt": "·
└── Project(qdk-sample)
    ├── Gitignore
    │   └── TextFile(.gitignore)
    ├── JsonFile(.qdk/meta.json)
    ├── NpmPackageManager
    ├── PackageJson
    │   └── JsonFile(package.json)
    ├── Typescript(^5.6.2)
    │   └── TsConfig
    │       └── TsConfigJsonFile(tsconfig.json)
    ├── EsLint
    │   ├── Prettier
    │   │   └── JsonFile(.prettierrc)
    │   └── TemplateFile(eslint.config.js)
    └── MySampleFiles
        └── SampleFiles(SampleFiles)
            ├── TextFile(src/index.ts)
            ├── JsonFile(src/config.json)
            └── TextFile(test/index.spec.ts)",
  "/eslint.config.js": "import globals from 'globals';
import eslint from '@eslint/js';
import tseslint from 'typescript-eslint';
import eslintPluginPrettierRecommended from 'eslint-plugin-prettier/recommended';
export default tseslint.config(
  eslint.configs.recommended,
  ...tseslint.configs.recommendedTypeChecked,
  ...tseslint.configs.stylisticTypeChecked,
  eslintPluginPrettierRecommended,
  { files: ['eslint.config.js', 'src/**/*.ts', 'test/**/*.ts'] },
  { ignores: ['dist/**/*'] },
  { languageOptions: { globals: globals.nodeBuiltin } },
  {
    languageOptions: {
      parserOptions: {
        projectService: { allowDefaultProject: ['*.config.{mjs,js}'] },
      },
    },
  },
  { rules: { '@typescript-eslint/no-unsafe-call': 'off' } },
  {
    languageOptions: {
      parserOptions: { tsconfigRootDir: import.meta.dirname },
    },
  },
);
",
  "/package.json": "{
  "name": "qdk-sample",
  "version": "0.1.0",
  "description": "Sample QDK Project",
  "license": "MIT",
  "type": "module",
  "module": "dist/src/index.js",
  "scripts": {
    "eslint": "eslint",
    "eslint:fix": "eslint --fix",
    "format": "prettier . --write",
    "qdk": "qdk synth",
    "qdk:check": "qdk synth --check",
    "test": "vitest",
    "typescript": "tsc",
    "typescript:check": "tsc -p tsconfig.json --noEmit",
    "typescript:explain": "tsc -p tsconfig.json --noEmit --explainFiles > explainTypes.txt"
  },
  "devDependencies": {
    "@eslint/js": "^9.12.0",
    "@tsconfig/node20": "^20.1.4",
    "eslint": "^9.0.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "globals": "^15.11.0",
    "prettier": "^3.0.0",
    "prettier-plugin-organize-imports": "^4.1.0",
    "qdk": "9.9.9-mock-latest",
    "typescript": "^5.6.2",
    "typescript-eslint": "^8.9.0",
    "vitest": "9.9.9-mock-latest"
  },
  "readme": "ERROR: No README data found!",
  "_id": "qdk-sample@0.1.0"
}
",
  "/src/config.json": "{
  "name": "Alice 2024-10-06T20:57:10.606Z"
}
",
  "/src/index.ts": "import { name } from './config.json';
export const sayHello = () => 'Hello ' + name;
",
  "/test/index.spec.ts": "import { describe, expect, it } from 'vitest';
import { sayHello } from '../src/index.js';

describe('index', () => {
  it('say hello', () => {
    // When
    const result = sayHello();
    // Then
    expect(result).toMatch(/^Hello Alice .+$/g);
  });
});
",
  "/tsconfig.json": "{
  "extends": ["@tsconfig/node20"],
  "include": [
    "qdk.config.ts",
    "eslint.config.mjs",
    "src/**/*.ts",
    "test/**/*.ts",
    "qdk.config.ts",
    "qdk/**/*.ts"
  ],
  "compilerOptions": {
    "outDir": "dist",
    "strictNullChecks": true,
    "resolveJsonModule": true
  }
}
",
}
`;
